# Taskfile include for Rust ecosystem
#

version: '3'

tasks:
  clippy-all:
    cmds:
      - task: clippy
        vars:
          FLAGS: --all-targets --all-features

  clippy-package:
    cmds:
      - task: clippy
        vars:
          FLAGS: --package {{.PACKAGE}} --all-targets --all-features

  clippy-package-feature:
    cmds:
      - task: clippy
        vars:
          FLAGS: --package {{.PACKAGE}} --all-targets --features {{.FEATURES}}

  clippy:
    vars:
      CLIPPY_FLAGS: >
        -D warnings
        -D clippy::todo
        -A clippy::manual_range_contains
    env:
      RUSTDOCFLAGS: -D warnings
    cmds:
      - cargo clippy {{.FLAGS}} -- {{.CLIPPY_FLAGS}}

  fmt-check:
    cmds:
      - cargo fmt --check

  fmt-fix:
    cmds:
      - cargo fmt

  watch-serve-doc:
    cmds:
      - cargo doc --target-dir target
      - cargo watch -s "cargo doc --target-dir target" &
      - live-server -p 8081 target/doc

  wasm-pack-build:
    vars:
      OUTPUT: "./target/wasm32-unknown-unknown/release/{{.PACKAGE}}.wasm"
    cmds:
      - defer: rm -f {{.OUTPUT}}.old
        silent: true
      - cmd: >
          if stat {{.OUTPUT}};
          then
            cp -p {{.OUTPUT}} {{.OUTPUT}}.old;
            cargo build --lib --target wasm32-unknown-unknown --release --target-dir target
            if test {{.OUTPUT}} -nt {{.OUTPUT}}.old;
            then
              wasm-pack build {{.WASM_PACK_ARGS}} -- --target-dir target;
            else
              echo 'skipping wasm-pack because cargo output did not change'
            fi
          else
            wasm-pack build {{.WASM_PACK_ARGS}} -- --target-dir target;
          fi
        silent: true

  update-macrotest:
    env:
      MACROTEST: overwrite
    cmds:
      - cargo test --test macrotest

  update-trybuild:
    env:
      TRYBUILD: overwrite
    cmds:
      - cargo test --test trybuild

